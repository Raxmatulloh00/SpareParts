@page "/"
@using ClosedXML.Excel
@using FourGreen.Modals
@using FourGreen.Pages.Shared.Map
@using Info.BotUsers
@using Newtonsoft.Json
@inject OrderRepository orderrepository
@inject NavigationManager NavigationManager
@inject BotUserRepository botUserRepository
@inject SparePartsRepository sparePartsRepository
@inject IJSRuntime jsRuntime
@using AntDesign
@if (activeKey == "1")
{
    <h3> Янги Заказлар</h3>
}
else if (activeKey == "2")
{
    <h3>Қабул Қилинган Заказлар</h3>
}

<Tabs @bind-ActiveKey="@activeKey" OnChange="OnTabChange" Animated>
    <TabPane Tab="Янги Заказлар" Key="1">
        @if (orderModels != null)
        {
            <Collapse DefaultActiveKey="@(new[]{""})" OnChange="Callback">
                <Panel Header="Доконга заказ берганлар" Key="1">
                    @if (orderModels.Count(w => w.Order.Type == OrderType.Takeout) > 0)
                    {
                        @foreach (var item in orderModels.Where(w => w.Order.Type == OrderType.Takeout))
                        {

                            <table>
                                <thead>
                                    <tr>
                                        <th>Заказ берган одамнинг исми</th>
                                        <th>Заказ берган одамнинг номери</th>
                                        <th>Заказ берган одамнинг закази</th>
                                        <th>Заказ берилган вохти</th>
                                        <th>Закази қабул қилиш</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <tr>
                                        <td>@item.BotUser.Name</td>
                                        <td>@item.BotUser.PhoneNumber</td>
                                        <td>
                                            <i style="font-size: 18px;" class="fa-regular fa-file-excel"></i>
                                            <a style="font-size: 18px;" href="neworder" @onclick="e=> ToExcel(item.Products.ToList(), item.BotUser.Name)">Ехcелда кориш</a>
                                        </td>
                                        <td>@item.BotUser.CreateDate</td>
                                        <td><button @onclick="(e=> Save(item.Order.Id))" class="btn" style="background-color: #80DF95; height:40px; margin-right:5px;">Заказни қабул қилиш</button></td>
                                    </tr>
                                </tbody>
                            </table>


                        }

                    }
                    else
                    {
                        <h5>Ҳозирча янги заказлар йўқ</h5>
                    }

                </Panel>
                <Panel Header="Тошкент ичига заказ берганлар" Key="2">
                    @if (orderModels.Count(w => w.Order.Type == OrderType.Delivery) > 0)
                    {
                        @foreach (var item in orderModels.Where(w => w.Order.Type == OrderType.Delivery))
                        {
                            <table>
                                <thead>
                                    <tr>
                                        <th>Заказ берган одамнинг исми</th>
                                        <th>Заказ берган одамнинг номери</th>
                                        <th>Заказ берган одамнинг закази</th>
                                        <th>Докон номи</th>
                                        <th>Лакация</th>
                                        <th>Заказ берилган вохти</th>
                                        <th>Закази қабул қилиш</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <tr>
                                        <td>@item.BotUser.Name</td>
                                        <td>@item.BotUser.PhoneNumber</td>
                                        <td>
                                            <i style="font-size: 18px;" class="fa-regular fa-file-excel"></i>
                                            <a style="font-size: 18px;" href="neworder" @onclick="e=> ToExcel(item.Products.ToList(), item.BotUser.Name)">Ехcелда кориш</a>
                                        </td>
                                        <td>@item.Order.StoreNo</td>
                                        <td>
                                            <Button Class="btn" OnClick="@(()=> ShowLokation(item))">
                                                📍Лакация
                                            </Button>
                                        </td>
                                        <td>@item.BotUser.CreateDate</td>
                                        <td><button @onclick="(e=> Save(item.Order.Id))" class="btn" style="background-color: #80DF95; height:40px; margin-right:5px;">Заказни қабул қилиш</button></td>
                                    </tr>
                                </tbody>
                            </table>
                        }
                    }
                    else
                    {
                        <h5>Ҳозирча янги заказлар йўқ</h5>
                    }
                </Panel>
                <Panel Header="Вилоятга заказ берганлар" Key="3">
                    @if (orderModels.Count(w => w.Order.Type == OrderType.RegionDelivery) > 0)
                    {
                        @foreach (var item in orderModels.Where(w => w.Order.Type == OrderType.RegionDelivery))
                        {

                            <table>
                                <thead>
                                    <tr>
                                        <th>Заказ берган одамнинг исми</th>
                                        <th>Заказ берган одамнинг номери</th>
                                        <th>Заказ берган одамнинг закази</th>
                                        <th>Шафёр исми</th>
                                        <th>Шафёр номери</th>
                                        <th>Заказ берилган вохти</th>
                                        <th>Закази қабул қилиш</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <tr>
                                        <td>@item.BotUser.Name</td>
                                        <td>@item.BotUser.PhoneNumber</td>
                                        <td>
                                            <i style="font-size: 18px;" class="fa-regular fa-file-excel"></i>
                                            <a style="font-size: 18px;" href="neworder" @onclick="e=> ToExcel(item.Products.ToList(), item.BotUser.Name)">Ехcелда кориш</a>
                                        </td>
                                        <td>@item.Order.DriverName</td>
                                        <td>+998 @item.Order.DriverNumber</td>
                                        <td>@item.BotUser.CreateDate</td>
                                        <td><button @onclick="(e=> Save(item.Order.Id))" class="btn" style="background-color: #80DF95; height:40px; margin-right:5px;">Заказни қабул қилиш</button></td>

                                    </tr>
                                </tbody>
                            </table>
                        }
                    }
                    else
                    {
                        <h5>Ҳозирча янги заказлар йўқ</h5>
                    }
                </Panel>
            </Collapse>
        }
    </TabPane>
    <TabPane Tab="Қабул Қилинган Заказлар" Key="2">
        <SaveOrder orderModels="@orderModels"></SaveOrder>
    </TabPane>
</Tabs>


<Modal Title="Заказ берган одамнинг лакацияси"
       @bind-Visible="@_visible">
    <OrderMap @ref="orderMap" Lat="@(lati)" Long="@(longti)" IsDelivery="false" />

</Modal>
@code {
    bool _visible = false;
    public List<OrderModel>? orderModels;
    public OrderType orderType;
    public List<SparePartsInfoModel> sparePartsInfoModels;
    public MyCart myCart = new();
    int userid;
    OrderMap? orderMap;
    double lati;
    double longti;
    string activeKey { get; set; } = "1";
    protected override void OnInitialized()
    {
        sparePartsInfoModels = sparePartsRepository.GetProducts();
        GetOrders(DeliveryStatus.New);
        StateHasChanged();
        base.OnInitialized();
    }

    void GetOrders(DeliveryStatus status)
    {
        orderModels = orderrepository.GetOrders(status);
        StateHasChanged();

    }
    void OnTabChange(string key)
    {
        if (key == "1" && activeKey == "1")
        {
            GetOrders(DeliveryStatus.New);
            NavigationManager.NavigateTo("/");
        }
        else if (key == "2")
        {
            GetOrders(DeliveryStatus.Confirmed);
            NavigationManager.NavigateTo("/");
        }
        // else
        // {
        //     GetOrders(DeliveryStatus.New);
        // }
        Console.WriteLine($"tab change:{key}");
        StateHasChanged();
    }
    public void Save(int orderid)
    {
        orderModels.RemoveAll(r => r.Order.Id == orderid);
        orderrepository?.ConfirmOrder(orderid);
        StateHasChanged();
    }

    public async Task ShowLokation(OrderModel order)
    {
        userid = order.BotUser.Id;
        lati = Convert.ToDouble(order.Order.Lat);
        longti = Convert.ToDouble(order.Order.Long);
        _visible = true;
        StateHasChanged();
        // await Task.Delay(300);
        // StateHasChanged();
        // _ = orderMap.ChangeCoords(lati,longti);
    }


    void Callback(string[] keys)
    {
        Console.WriteLine(string.Join(',', keys));
        StateHasChanged();
    }

    // public void ToExcel(List<Products> products, string username)
    // {

    //     IXLWorkbook workbook = new XLWorkbook();
    //     IXLWorksheet worksheet = workbook.Worksheets.Add("Zakazi");
    //     worksheet.Cell(1, 1).Value = "Karalog number";
    //     worksheet.Cell(1, 2).Value = "Zapchast Brendi";
    //     worksheet.Cell(1, 3).Value = "Zapchast Turi";
    //     worksheet.Cell(1, 4).Value = "Zapchast Nomi";
    //     worksheet.Cell(1, 5).Value = "Zakaz Qilinganlar soni";
    //     worksheet.Cell(1, 6).Value = "Zapchast Narxi";
    //     worksheet.Cell(1, 7).Value = "Narxi";
    //     worksheet.Column(1).Width = 21;
    //     worksheet.Column(2).Width = 21;
    //     worksheet.Column(3).Width = 21;
    //     worksheet.Column(4).Width = 21;
    //     worksheet.Column(5).Width = 21;
    //     worksheet.Column(6).Width = 21;
    //     worksheet.Column(7).Width = 21;
    //     int index = 1;
    //     for (index = 1; index <= products.Count; index++)
    //     {
    //         worksheet.Cell(index + 1, 1).Value = sparePartsInfoModels.Find(f => f.Id == products[index - 1].productId).CatalogNumber;
    //         worksheet.Cell(index + 1, 2).Value = products[index - 1].productBrand;
    //         worksheet.Cell(index + 1, 3).Value = products[index - 1].productTaype;
    //         worksheet.Cell(index + 1, 4).Value = products[index - 1].productName;
    //         worksheet.Cell(index + 1, 5).Value = products[index - 1].qty;
    //         worksheet.Cell(index + 1, 6).Value = products[index - 1].price;
    //         worksheet.Cell(index + 1, 7).Value = products[index - 1].price * products[index - 1].qty;

    //         // worksheet.Cell(index + 1, 1).Value = listPaidVideoApplies[index - 1].ID;
    //         // worksheet.Cell(index + 1, 2).Value = listPaidVideoApplies[index - 1].FullName;
    //         // worksheet.Cell(index + 1, 3).Value = listPaidVideoApplies[index - 1].WhyCongratulate;
    //         // worksheet.Cell(index + 1, 4).Value = listPaidVideoApplies[index - 1].WhoCongratulate;
    //         // worksheet.Cell(index + 1, 5).Value = listPaidVideoApplies[index - 1].MusicForHappyPerson;
    //         // worksheet.Cell(index + 1, 6).Value = listPaidVideoApplies[index - 1].PhotoPath;
    //     }
    //     index++;
    //     worksheet.Cell(index, 1).Value = "Total";
    //     worksheet.Cell(index, 7).Value = products.Sum(s => s.price * s.qty);

    //     using (var stream = new MemoryStream())
    //     {
    //         workbook.SaveAs(stream);
    //         var content = Convert.ToBase64String(stream.ToArray());
    //         jsRuntime.InvokeAsync<string>("saveAsFile", $"{username} zakazi.xlsx", content);
    //     }
    // }

    public void ToExcel(List<Products> products, string username)
    {
        using (var workbook = new XLWorkbook())
        {
            var worksheet = workbook.Worksheets.Add("Zakazi");

            // Header Row
            var headers = new[] { "Запчаст бренди", "Запчаст тури", "Запчаст номи", "Каталог рақами", "Заказ қилинганлар сони", "Запчаст нархи", "Нархи" };
            for (int i = 0; i < headers.Length; i++)
            {
                worksheet.Cell(1, i + 1).Value = headers[i];
                worksheet.Column(i + 1).Width = 25;  // Setting column width
            }

            // Filling Data Rows
            for (int i = 0; i < products.Count; i++)
            {
                var product = products[i];
                var sparePart = sparePartsInfoModels.Find(f => f.Id == product.productId);

                worksheet.Cell(i + 2, 1).Value = product.productBrand;
                worksheet.Cell(i + 2, 2).Value = product.productTaype;
                worksheet.Cell(i + 2, 3).Value = product.productName;
                worksheet.Cell(i + 2, 4).Value = sparePart?.CatalogNumber;
                worksheet.Cell(i + 2, 5).Value = product.qty;
                worksheet.Cell(i + 2, 6).Value = product.price;
                worksheet.Cell(i + 2, 7).Value = product.price * product.qty;
            }

            // Adding Total Row
            int totalRow = products.Count + 2;
            worksheet.Cell(totalRow, 1).Value = "Тотал";
            worksheet.Cell(totalRow, 7).Value = products.Sum(s => s.price * s.qty);

            // Saving the Workbook
            using (var stream = new MemoryStream())
            {
                workbook.SaveAs(stream);
                var content = Convert.ToBase64String(stream.ToArray());
                jsRuntime.InvokeAsync<string>("saveAsFile", $"{username} zakazi.xlsx", content);
            }
        }
    }

}

<style>
    table {
        width: 100%;
        margin-bottom: 10px;
        text-align: center;
    }


    th, td {
        font-size: 16px;
        padding: 10px;
    }

    table, thead, tbody, th, td, tr {
        border: 1px solid black;
    }

    .btn {
        width: auto;
        height: auto;
        border-radius: 10px;
        border: 1px solid black;
        font-size: 14px;
    }
</style>
